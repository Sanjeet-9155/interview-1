USEMEMO
Appliaction ko perfrom improve krene ke liye  or enhence krne ke liye.
usememo ka use kate hai. to
kabhi kabhi kya hota hai react ke application me.
-ak file me bahut sare function hote hai
 to kuch function yaise hote hai ki unnessary call hote rahte hai.

 to eske wajh se appliaction ki perfrom slow hone lagta hai.
-to es chij se banche ke liye usememo use kate hai.

callback or ussememo 
- the usecallbacks and ussememo hooks are simlimar .
1.the main difernt is that usseMemo returns a optimzed value &
  ussecaallbak returns a optimzed function.
3.usememo only recompute the memoized value when one of the dependency has changed.
  usecallback will return a memoized version of the callbacks if one of the dependency has changed.
4.usememo avoid expensive calcalations on every render.
  usecallback prevent unnessary renders.

import React, { useMemo, useState } from 'react';

function Memo(props) {
   const [countOne, setCounterOne] = useState(0);
   const [countTwo, setCounterTwo] = useState(0);

   const incrementOne = () => {
      setCounterOne(countOne + 1);
   };

   const incrementTwo = () => {
      setCounterTwo(countTwo + 1);
   };

   const isEven = useMemo(() => {
      console.warn("......");
      let i = 0;
      while (i < 20000000) i++;
      return countOne % 2 === 0;
   }, [countOne]);

   return (
      <div>
         <button onClick={incrementOne}>Counter + {countOne}</button>
         <span>{isEven ? "Even" : "Odd"}</span>
         <button onClick={incrementTwo}>Counter - {countTwo}</button>
      </div>
   );
}

export default Memo;

